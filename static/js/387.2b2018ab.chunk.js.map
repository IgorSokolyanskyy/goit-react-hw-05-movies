{"version":3,"file":"static/js/387.2b2018ab.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErorrMessega/ErrorView.styled.js","components/ErorrMessega/ErorrMessega.jsx","components/Loader/Louder.styled.js","components/Loader/Loader.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 25px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nexport const Img = styled.img`\n  width: 210px;\n  height: 270px;\n\n  border-radius: 5px;\n`;\n\nexport const Item = styled.li`\n  width: 210px;\n`;\n\nexport const P = styled.p`\n  margin: 0;\n  margin-top: 6px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchCast } from '../../services/Api';\nimport { useParams } from 'react-router-dom';\nimport { Status } from 'constants/status';\nimport { List, Img, Item, P } from './Cast.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport noPhoto from 'images/noPhoto.jpg';\nimport Loader from '../Loader/Loader';\nimport ErrorMessage from '../ErorrMessega/ErorrMessega';\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [scroll, setScroll] = useState(0);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const getData = async () => {\n      try {\n        const { cast } = await fetchCast(movieId, signal);\n\n        if (cast.length === 0) {\n          toast('ðŸ’© No results!', { autoClose: 3000 });\n          setStatus(Status.IDLE);\n          return;\n        }\n\n        setActors(cast);\n        setScroll(document.documentElement.scrollHeight);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    getData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!scroll) {\n      return;\n    }\n    window.scrollTo({\n      top: scroll - 240,\n      behavior: 'smooth',\n    });\n  }, [scroll]);\n\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <div>\n      {status === Status.PENDING && <Loader />}\n\n      {status === Status.REJECTED && <ErrorMessage message={error} />}\n\n      {status === Status.RESOLVED && (\n        <List>\n          {actors.map(({ cast_id, profile_path, name, character }) => (\n            <Item key={cast_id}>\n              <Img\n                src={profile_path ? `${BASE_URL}${profile_path}` : noPhoto}\n                alt={name}\n              />\n              <P>\n                Name: <b>{name}</b>\n              </P>\n              <P>\n                Character: <b>{character}</b>\n              </P>\n            </Item>\n          ))}\n        </List>\n      )}\n\n      <ToastContainer rtl />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n`;\n\nexport const P = styled.p`\n  display: flex;\n  justify-content: center;\n  color: red;\n  font-size: 26px;\n`;\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport erorr404 from 'images/erorr404.jpg';\nimport { Box, P } from './ErrorView.styled';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nexport default function ErrorView({ message }) {\n  return createPortal(\n    <Box role=\"alert\">\n      <P text={message}>{message}</P>\n      <img src={erorr404} width=\"700\" alt=\"sadcat\" />\n    </Box>,\n    loaderRoot\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { createPortal } from 'react-dom';\nimport { RotatingLines } from 'react-loader-spinner';\n\nimport { Box } from './Louder.styled';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nexport default function Loader() {\n  return createPortal(\n    <Box>\n      <RotatingLines type=\"Watch\" strokeColor=\"grey\" height={100} width={100} />\n    </Box>,\n    loaderRoot\n  );\n}\n","import axios from 'axios';\n\nconst AXIOS = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '2ac3f085729a6d415a45dd563d848739',\n    language: 'en-US',\n  },\n});\n\nconst fetchTrendsMovies = async signal => {\n  const { data } = await AXIOS.get(`trending/movie/day`, { signal });\n  const trends = data.results;\n\n  return trends;\n};\n\nconst fetchMovieById = async (id, signal) => {\n  const { data } = await AXIOS.get(`/movie/${id}`, { signal });\n\n  return data;\n};\n\nconst fetchCast = async (id, signal) => {\n  const { data } = await AXIOS.get(`/movie/${id}/credits`, { signal });\n\n  return data;\n};\n\nconst fetchReviews = async (id, signal) => {\n  const { data } = await AXIOS.get(`/movie/${id}/reviews`, { signal });\n\n  return data;\n};\n\nconst fetchMoviesBySearch = async searchQuery => {\n  const { data } = await AXIOS.get(`search/movie?query=${searchQuery}`);\n  const results = data.results;\n\n  return results;\n};\n\nexport {\n  fetchTrendsMovies,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n  fetchMoviesBySearch,\n};\n"],"names":["List","styled","Img","Item","P","Cast","useState","actors","setActors","error","setError","Status","status","setStatus","scroll","setScroll","movieId","useParams","useEffect","controller","AbortController","signal","getData","fetchCast","cast","length","toast","autoClose","document","documentElement","scrollHeight","name","abort","window","scrollTo","top","behavior","Loader","message","map","cast_id","profile_path","character","src","noPhoto","alt","rtl","Box","loaderRoot","querySelector","ErrorView","createPortal","role","text","erorr404","width","type","strokeColor","height","AXIOS","axios","baseURL","params","api_key","language","fetchTrendsMovies","get","data","trends","results","fetchMovieById","id","fetchReviews","fetchMoviesBySearch","searchQuery"],"sourceRoot":""}